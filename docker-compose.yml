version: '3.8'

services:
  zookeeper:
    image: bitnamilegacy/zookeeper:3.9.1
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"

  kafka:
    image: bitnamilegacy/kafka:3.6.1
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

  spark-master:
    image: bitnamilegacy/spark:3.4.1
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    ports:
      - "8080:8080" # Spark master web UI
      - "7077:7077"
    volumes:
      - ./:/workspace


  spark-worker:
    image: bitnamilegacy/spark:3.4.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    depends_on:
      - spark-master
    ports:
      - "8081:8081" # Spark worker web UI

  pytest:
    build:
      context: .
      dockerfile: Dockerfile
    working_dir: /work
    volumes:
      - ./:/work
    depends_on:
      - kafka
    ports:
      - "8888:8888"   # acc√®s Jupyter
    environment:
      - SPARK_HOME=/opt/bitnami/spark
      - PYSPARK_PYTHON=python3

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=app
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=events
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init_db:/docker-entrypoint-initdb.d

volumes:
  pgdata: